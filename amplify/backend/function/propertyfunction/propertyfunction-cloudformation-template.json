{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "{\"createdOn\":\"Windows\",\"createdBy\":\"Amplify\",\"createdWith\":\"9.1.0\",\"stackType\":\"function-Lambda\",\"metadata\":{}}",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    },
    "storagevstorageName": {
      "Type": "String",
      "Default": "storagevstorageName"
    },
    "storagevstorageArn": {
      "Type": "String",
      "Default": "storagevstorageArn"
    },
    "storagevstorageStreamArn": {
      "Type": "String",
      "Default": "storagevstorageStreamArn"
    },
    "storageDispositionsName": {
      "Type": "String",
      "Default": "storageDispositionsName"
    },
    "storageDispositionsArn": {
      "Type": "String",
      "Default": "storageDispositionsArn"
    },
    "storageDispositionsStreamArn": {
      "Type": "String",
      "Default": "storageDispositionsStreamArn"
    },
    "apivalpropertiesApiName": {
      "Type": "String",
      "Default": "apivalpropertiesApiName"
    },
    "apivalpropertiesApiId": {
      "Type": "String",
      "Default": "apivalpropertiesApiId"
    },
    "storageemployeesName": {
      "Type": "String",
      "Default": "storageemployeesName"
    },
    "storageemployeesArn": {
      "Type": "String",
      "Default": "storageemployeesArn"
    },
    "storageemployeesStreamArn": {
      "Type": "String",
      "Default": "storageemployeesStreamArn"
    },
    "storageeventsName": {
      "Type": "String",
      "Default": "storageeventsName"
    },
    "storageeventsArn": {
      "Type": "String",
      "Default": "storageeventsArn"
    },
    "storageeventsStreamArn": {
      "Type": "String",
      "Default": "storageeventsStreamArn"
    },
    "storagecareersName": {
      "Type": "String",
      "Default": "storagecareersName"
    },
    "storagecareersArn": {
      "Type": "String",
      "Default": "storagecareersArn"
    },
    "storagecareersStreamArn": {
      "Type": "String",
      "Default": "storagecareersStreamArn"
    },
    "storageapplicationsName": {
      "Type": "String",
      "Default": "storageapplicationsName"
    },
    "storageapplicationsArn": {
      "Type": "String",
      "Default": "storageapplicationsArn"
    },
    "storageapplicationsStreamArn": {
      "Type": "String",
      "Default": "storageapplicationsStreamArn"
    },
    "storagepayoutsName": {
      "Type": "String",
      "Default": "storagepayoutsName"
    },
    "storagepayoutsArn": {
      "Type": "String",
      "Default": "storagepayoutsArn"
    },
    "storagepayoutsStreamArn": {
      "Type": "String",
      "Default": "storagepayoutsStreamArn"
    },
    "storagedispoemployeesName": {
      "Type": "String",
      "Default": "storagedispoemployeesName"
    },
    "storagedispoemployeesArn": {
      "Type": "String",
      "Default": "storagedispoemployeesArn"
    },
    "storagedispoemployeesStreamArn": {
      "Type": "String",
      "Default": "storagedispoemployeesStreamArn"
    },
    "storagevalorantstorageBucketName": {
      "Type": "String",
      "Default": "storagevalorantstorageBucketName"
    },
    "storageinventoryName": {
      "Type": "String",
      "Default": "storageinventoryName"
    },
    "storageinventoryArn": {
      "Type": "String",
      "Default": "storageinventoryArn"
    },
    "storageinventoryStreamArn": {
      "Type": "String",
      "Default": "storageinventoryStreamArn"
    },
    "inventory": {
      "Type": "String"
    },
    "database": {
      "Type": "String"
    },
    "emailblast": {
      "Type": "String"
    },
    "emailBlast": {
      "Type": "String"
    },
    "reactAppAcqOptions": {
      "Type": "String"
    },
    "reactAppAcqPaperwork": {
      "Type": "String"
    },
    "reactAppDispoPaperwork": {
      "Type": "String"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "propertyfunction",
            {
              "Fn::Join": [
                "",
                [
                  "propertyfunction",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "STORAGE_VSTORAGE_NAME": {
              "Ref": "storagevstorageName"
            },
            "STORAGE_VSTORAGE_ARN": {
              "Ref": "storagevstorageArn"
            },
            "STORAGE_VSTORAGE_STREAMARN": {
              "Ref": "storagevstorageStreamArn"
            },
            "STORAGE_DISPOSITIONS_NAME": {
              "Ref": "storageDispositionsName"
            },
            "STORAGE_DISPOSITIONS_ARN": {
              "Ref": "storageDispositionsArn"
            },
            "STORAGE_DISPOSITIONS_STREAMARN": {
              "Ref": "storageDispositionsStreamArn"
            },
            "API_VALPROPERTIES_APINAME": {
              "Ref": "apivalpropertiesApiName"
            },
            "API_VALPROPERTIES_APIID": {
              "Ref": "apivalpropertiesApiId"
            },
            "STORAGE_EMPLOYEES_NAME": {
              "Ref": "storageemployeesName"
            },
            "STORAGE_EMPLOYEES_ARN": {
              "Ref": "storageemployeesArn"
            },
            "STORAGE_EMPLOYEES_STREAMARN": {
              "Ref": "storageemployeesStreamArn"
            },
            "STORAGE_EVENTS_NAME": {
              "Ref": "storageeventsName"
            },
            "STORAGE_EVENTS_ARN": {
              "Ref": "storageeventsArn"
            },
            "STORAGE_EVENTS_STREAMARN": {
              "Ref": "storageeventsStreamArn"
            },
            "STORAGE_CAREERS_NAME": {
              "Ref": "storagecareersName"
            },
            "STORAGE_CAREERS_ARN": {
              "Ref": "storagecareersArn"
            },
            "STORAGE_CAREERS_STREAMARN": {
              "Ref": "storagecareersStreamArn"
            },
            "STORAGE_APPLICATIONS_NAME": {
              "Ref": "storageapplicationsName"
            },
            "STORAGE_APPLICATIONS_ARN": {
              "Ref": "storageapplicationsArn"
            },
            "STORAGE_APPLICATIONS_STREAMARN": {
              "Ref": "storageapplicationsStreamArn"
            },
            "STORAGE_PAYOUTS_NAME": {
              "Ref": "storagepayoutsName"
            },
            "STORAGE_PAYOUTS_ARN": {
              "Ref": "storagepayoutsArn"
            },
            "STORAGE_PAYOUTS_STREAMARN": {
              "Ref": "storagepayoutsStreamArn"
            },
            "STORAGE_DISPOEMPLOYEES_NAME": {
              "Ref": "storagedispoemployeesName"
            },
            "STORAGE_DISPOEMPLOYEES_ARN": {
              "Ref": "storagedispoemployeesArn"
            },
            "STORAGE_DISPOEMPLOYEES_STREAMARN": {
              "Ref": "storagedispoemployeesStreamArn"
            },
            "STORAGE_VALORANTSTORAGE_BUCKETNAME": {
              "Ref": "storagevalorantstorageBucketName"
            },
            "STORAGE_INVENTORY_NAME": {
              "Ref": "storageinventoryName"
            },
            "STORAGE_INVENTORY_ARN": {
              "Ref": "storageinventoryArn"
            },
            "STORAGE_INVENTORY_STREAMARN": {
              "Ref": "storageinventoryStreamArn"
            },
            "INVENTORY": {
              "Ref": "inventory"
            },
            "DATABASE": {
              "Ref": "database"
            },
            "EMAILBLAST": {
              "Ref": "emailblast"
            },
            "EMAIL_BLAST": {
              "Ref": "emailBlast"
            },
            "REACT_APP_ACQ_OPTIONS": {
              "Ref": "reactAppAcqOptions"
            },
            "REACT_APP_ACQ_PAPERWORK": {
              "Ref": "reactAppAcqPaperwork"
            },
            "REACT_APP_DISPO_PAPERWORK": {
              "Ref": "reactAppDispoPaperwork"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Layers": [],
        "Timeout": 25
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "valorantLambdaRole44068ce5",
            {
              "Fn::Join": [
                "",
                [
                  "valorantLambdaRole44068ce5",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "AmplifyResourcesPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:ListBucket",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "storagevalorantstorageBucketName"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "storagevalorantstorageBucketName"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storagevstorageArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storagevstorageArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storageDispositionsArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storageDispositionsArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storageemployeesArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storageemployeesArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storageeventsArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storageeventsArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storagecareersArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storagecareersArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storageapplicationsArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storageapplicationsArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storagepayoutsArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storagepayoutsArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storagedispoemployeesArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storagedispoemployeesArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Update*",
                "dynamodb:RestoreTable*",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storageinventoryArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storageinventoryArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "vstorageTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-vstorage",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storagevstorageStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "vstorageTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "vstorageTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storagevstorageStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "DispositionsTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-Dispositions",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storageDispositionsStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "DispositionsTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "DispositionsTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storageDispositionsStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "employeesTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-employees",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storageemployeesStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "employeesTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "employeesTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storageemployeesStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "eventsTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-events",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storageeventsStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "eventsTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "eventsTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storageeventsStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "careersTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-careers",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storagecareersStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "careersTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "careersTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storagecareersStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "applicationsTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-applications",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storageapplicationsStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "applicationsTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "applicationsTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storageapplicationsStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "payoutsTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-payouts",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storagepayoutsStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "payoutsTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "payoutsTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storagepayoutsStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "dispoemployeesTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-dispoemployees",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storagedispoemployeesStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "dispoemployeesTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "dispoemployeesTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storagedispoemployeesStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    },
    "inventoryTriggerPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-trigger-policy-inventory",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListStreams"
              ],
              "Resource": [
                {
                  "Ref": "storageinventoryStreamArn"
                }
              ]
            }
          ]
        }
      }
    },
    "inventoryTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "inventoryTriggerPolicy"
      ],
      "Properties": {
        "BatchSize": 100,
        "Enabled": true,
        "EventSourceArn": {
          "Ref": "storageinventoryStreamArn"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST"
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    }
  }
}